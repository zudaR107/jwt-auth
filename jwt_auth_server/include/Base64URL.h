#pragma once
#include <string>

/**
 * @brief Класс для кодирования и декодирования строк в формате Base64URL.
 * 
 * Base64URL — это модифицированная версия стандартного Base64,
 * предназначенная для использования в URL и именах файлов.
 * 
 * Отличия от обычного Base64:
 * - Символы `+` заменяются на `-`
 * - Символы `/` заменяются на `_`
 * - Символы `=` (для выравнивания) удаляются
 * 
 * Применяется в JWT для кодирования заголовка и полезной нагрузки.
 */
class Base64URL {
public:
    /**
     * @brief Кодирует входную строку в формат Base64URL.
     * 
     * Алгоритм:
     * 1. Строка сначала кодируется в обычный Base64:
     *    - Каждый байт добавляется в буфер.
     *    - Каждые 6 бит буфера превращаются в символ из алфавита Base64.
     * 2. Преобразование в Base64URL:
     *    - `+` заменяется на `-`
     *    - `/` заменяется на `_`
     *    - `=` (padding) удаляется
     * 
     * @param input Входная строка (обычно — JSON)
     * @return Закодированная строка в формате Base64URL
     */
    static std::string encode(const std::string& input);

    /**
     * @brief Декодирует строку из формата Base64URL в исходное значение.
     * 
     * Алгоритм:
     * 1. Преобразование из Base64URL обратно в Base64:
     *    - `-` → `+`, `_` → `/`, добавляются символы `=`, если нужно
     * 2. Расшифровка:
     *    - Каждые 4 символа → 3 байта оригинальных данных
     * 
     * @param input Строка в формате Base64URL
     * @return Декодированная строка (обычно — JSON)
     */
    static std::string decode(const std::string& input);
};
