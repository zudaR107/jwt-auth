#pragma once
#include "RSA.h"

/**
 * @brief Класс для хранения и загрузки RSA-ключей на диск.
 *
 * Данный класс предоставляет интерфейс для:
 * - сохранения приватного и публичного ключа в текстовые файлы (`rsa_private.key` и `rsa_public.key`);
 * - верификации целостности приватного ключа с помощью SHA-256 хеша;
 * - загрузки ключей с диска и проверки корректности формата.
 *
 * Формат файлов:
 * - Приватный ключ (`rsa_private.key`) содержит строку вида:
 *   ```
 *   d;n
 *   hash=SHA256(d;n)
 *   ```
 *   Это позволяет проверить, что приватный ключ не был случайно или намеренно изменён.
 *
 * - Публичный ключ (`rsa_public.key`) содержит строку вида:
 *   ```
 *   e;n
 *   ```
 */
class KeyStorage {
public:
    /**
     * @brief Загружает RSA-ключи из файлов `rsa_private.key` и `rsa_public.key`.
     *
     * @param[out] pubKey Публичный ключ (заполняется из файла)
     * @param[out] privKey Приватный ключ (заполняется из файла)
     * @return true, если ключи успешно загружены и верифицированы;
     *         false в случае ошибки или несоответствия контрольной суммы.
     */
    static bool loadKeys(RSAPublicKey& pubKey, RSAPrivateKey& privKey);

    /**
     * @brief Сохраняет RSA-ключи в файлы.
     *
     * Приватный ключ сохраняется с добавлением SHA-256 контрольной суммы,
     * чтобы при последующей загрузке можно было проверить его целостность.
     *
     * @param pubKey Публичный ключ, который сохраняется в `rsa_public.key`
     * @param privKey Приватный ключ, который сохраняется в `rsa_private.key` с хешем
     */
    static void saveKeys(const RSAPublicKey& pubKey, const RSAPrivateKey& privKey);
};
